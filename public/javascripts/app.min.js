"use strict";function configs(t,e){var n=function(t,e,n){function o(t){return 401===t.status?e.error("You are unauthorised to access the requested resource (401)"):404===t.status?e.error("The requested resource could not be found (404)"):500===t.status&&e.error("Internal server error (500)"),n.reject(t)}function r(t){return t}return function(t){return t.then(r,o)}};t.interceptors.push(n),e.debugEnabled(!0)}angular.module("app.config",[]).config(configs),angular.module("app.core",[]),angular.module("todoApplication",["ngRoute","ui.bootstrap","app.routes","app.core","app.services","app.config"]),angular.module("app.routes",["ngRoute"]).config(function(t,e){t.when("/",{templateUrl:"app/components/dashboard/dashboardView.html",controller:"DashboardController as dashboard",resolve:{lists:function(t){return t.getAll()}}}).otherwise({redirectTo:"/"}),e.html5Mode(!0)}),angular.module("app.services",[]),angular.module("app.core").controller("DashboardController",function(t,e){var n=this;n.lists=e}),angular.module("app.core").directive("taskList",["ListService",function(t){return{scope:{list:"="},templateUrl:"app/shared/list/listView.html",controller:function(e){var n=function(){e.list.tasks.completed=e.list.tasks.filter(function(t){return t.completed}).length};e.toggle=function(e){console.log("Toggling task "+e.name),t.toggle(e).then(function(){n()})},e.delete=function(e){console.log("Removing task "+e.name),t.delete(e)},e.addTask=function(){e.name&&""!==e.name&&(console.log("Adding new task "+e.name),t.addTask(e.list,{name:e.name}))},n()}}}]),angular.module("app.services").factory("ListService",["$http",function(t){var e={lists:[]};return e.getAll=function(){return t.get("/api/lists").then(function(t){return angular.copy(t.data,e.lists),e.lists})},e.addTask=function(e,n){return t.post("/api/list/"+e._id+"/tasks",n).then(function(t){e.tasks.push(t.data)})},e.toggle=function(e){return t.put("/api/list/"+e.list._id+"/task/"+e._id+"/toggle").then(function(){e.completed^=!0})},e.delete=function(e){return t.delete("/api/task/"+e._id).then(function(){e.list.tasks.splice(e.list.tasks.indexOf(e),1)})},e}]);