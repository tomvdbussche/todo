"use strict";function configs(e,t){var r=function(e,t,r){function o(e){return 401===e.status?t.error("You are unauthorised to access the requested resource (401)"):404===e.status?t.error("The requested resource could not be found (404)"):500===e.status&&t.error("Internal server error (500)"),r.reject(e)}function n(e){return e}return function(e){return e.then(n,o)}};e.interceptors.push(r),t.debugEnabled(!0)}angular.module("app.config",[]).config(configs),angular.module("app.core",[]),angular.module("todoApplication",["ngRoute","ui.bootstrap","app.routes","app.core","app.services","app.config"]),angular.module("app.routes",["ngRoute"]).config(function(e,t){e.when("/",{templateUrl:"app/components/dashboard/dashboardView.html",controller:"DashboardController as dashboard",resolve:{lists:function(e){return e.getAll()}}}).otherwise({redirectTo:"/"}),t.html5Mode(!0)}),angular.module("app.services",[]),angular.module("app.core").controller("DashboardController",function(e,t){var r=this;r.lists=t}),angular.module("app.core").directive("taskList",["ListService",function(e){return{scope:{list:"="},templateUrl:"app/shared/list/listView.html",controller:function(t){t.list.tasks.completed=t.list.tasks.filter(function(e){return e.completed}).length,t.toggle=function(t){e.toggle(t)},t.delete=function(t){console.log("Removed"),e.delete(t)}}}}]),angular.module("app.services").factory("ListService",["$http",function(e){var t={lists:[]};return t.getAll=function(){return e.get("/api/lists").then(function(e){return angular.copy(e.data,t.lists),t.lists})},t.toggle=function(t){return e.put("/api/list/"+t.list+"/task/"+t._id+"/toggle").then(function(){t.completed^=!0})},t.delete=function(t){return e.delete("/api/task/"+t._id).then(function(e){t.list.tasks.splice(t.list.tasks.indexOf(t),1)})},t}]);